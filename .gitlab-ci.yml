# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build

build-win-linux:
  stage: build
  image: rust:slim-bullseye
  tags:
    - arm64
    - linux
  script:
    - apt-get update && apt-get install -y build-essential gcc-x86-64-linux-gnu mingw-w64
    - rustup target add x86_64-unknown-linux-gnu
    - rustup target add x86_64-pc-windows-gnu
    - rustup target add i686-pc-windows-gnu
    - RUSTFLAGS=-Clinker=/usr/bin/x86_64-linux-gnu-gcc cargo build -p skyhook-unity-native --target x86_64-unknown-linux-gnu --release
    - RUSTFLAGS=-Clinker=/usr/bin/x86_64-w64-mingw32-gcc cargo build -p skyhook-unity-native --target x86_64-pc-windows-gnu --release
    - RUSTFLAGS=-Clinker=/usr/bin/i686-w64-mingw32-gcc cargo build -p skyhook-unity-native --target i686-pc-windows-gnu --release
    - mkdir Plugins
    - mkdir Plugins/x64
    - mkdir Plugins/i686
    - cp target/x86_64-unknown-linux-gnu/release/libskyhook_unity.so Plugins/x64
    - cp target/x86_64-pc-windows-gnu/release/skyhook_unity.dll Plugins/x64
    - cp target/i686-pc-windows-gnu/release/skyhook_unity.dll Plugins/i686

  cache:
    policy: pull-push
    unprotect: false
    untracked: false
    when: on_success
    key: skyhook-unity-native
    paths:
      - "target"
  artifacts:
    untracked: false
    when: on_success
    expire_in: 30 days
    paths:
      - 'Plugins/**/*'

# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests... This will take about 60 seconds."
#     - sleep 60
#     - echo "Code coverage is 90%"

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
