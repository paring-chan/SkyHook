use crate::keycodes::VK;

pub fn raw_keycode_to_vk(code: u16) -> VK {
    match code {
        0x00 => VK::A,
        0x01 => VK::S,
        0x02 => VK::D,
        0x03 => VK::F,
        0x04 => VK::H,
        0x05 => VK::G,
        0x06 => VK::Z,
        0x07 => VK::X,
        0x08 => VK::C,
        0x09 => VK::V,
        // skip
        0x0b => VK::B,
        0x0c => VK::Q,
        0x0d => VK::W,
        0x0e => VK::E,
        0x0f => VK::R,
        0x10 => VK::Y,
        0x11 => VK::T,
        0x12 => VK::Alpha1,
        0x13 => VK::Alpha2,
        0x14 => VK::Alpha3,
        0x15 => VK::Alpha4,
        0x16 => VK::Alpha6,
        0x17 => VK::Alpha5,
        0x18 => VK::Equal,
        0x19 => VK::Alpha9,
        0x1a => VK::Alpha7,
        0x1b => VK::Minus,
        0x1c => VK::Alpha8,
        0x1d => VK::Alpha0,
        0x1e => VK::RightBrace,
        0x1f => VK::O,
        0x20 => VK::U,
        0x21 => VK::LeftBrace,
        0x22 => VK::I,
        0x23 => VK::P,
        0x24 => VK::Enter,
        0x25 => VK::L,
        0x26 => VK::J,
        0x27 => VK::Apostrophe,
        0x28 => VK::K,
        0x29 => VK::Semicolon,
        0x2a => VK::BackSlash,
        0x2b => VK::Comma,
        0x2c => VK::Slash,
        0x2d => VK::N,
        0x2e => VK::M,
        0x2f => VK::Dot,
        0x30 => VK::Tab,
        0x31 => VK::Space,
        0x32 => VK::Grave,
        0x33 => VK::Backspace,
        // skip
        0x35 => VK::Escape,
        // skip
        0x37 => VK::Super,
        0x38 => VK::LShift,
        0x39 => VK::CapsLock,
        0x3a => VK::LAlt,
        0x3b => VK::LControl,
        0x3c => VK::RShift,
        0x3d => VK::RAlt,
        0x3e => VK::RControl,
        // skip
        0x40 => VK::F17,
        // skip
        0x43 => VK::KeypadAsterisk,
        // skip
        0x45 => VK::KeypadPlus,
        // skip
        0x47 => VK::NumLock,
        // skip
        0x4b => VK::KeypadSlash,
        0x4c => VK::KeypadEnter,
        // skip
        0x4e => VK::KeypadMinus,
        0x4f => VK::F18,
        0x50 => VK::F19,
        // skip
        0x52 => VK::Keypad0,
        0x53 => VK::Keypad1,
        0x54 => VK::Keypad2,
        0x55 => VK::Keypad3,
        0x56 => VK::Keypad4,
        0x57 => VK::Keypad5,
        0x58 => VK::Keypad6,
        0x59 => VK::Keypad7,
        0x5a => VK::F20,
        0x5b => VK::Keypad8,
        0x5c => VK::Keypad9,
        // skip
        0x5e => VK::Minus,
        // skip
        0x60 => VK::F5,
        0x61 => VK::F6,
        0x62 => VK::F7,
        0x63 => VK::F3,
        0x64 => VK::F8,
        0x65 => VK::F9,
        // skip
        0x67 => VK::F11,
        // skip
        0x69 => VK::F13,
        0x6a => VK::F16,
        0x6b => VK::F14,
        // skip
        0x6d => VK::F10,
        // skip
        0x6f => VK::F12,
        // skip
        0x71 => VK::F15,
        0x72 => VK::Insert,
        0x73 => VK::Home,
        0x74 => VK::PageUp,
        0x75 => VK::Delete,
        0x76 => VK::F4,
        0x77 => VK::End,
        0x78 => VK::F2,
        0x79 => VK::PageDown,
        0x7a => VK::F1,
        0x7b => VK::ArrowLeft,
        0x7c => VK::ArrowRight,
        0x7d => VK::ArrowDown,
        0x7e => VK::ArrowUp,
        // skip
        0x100 => VK::MouseLeft,
        0x101 => VK::MouseRight,
        0x102 => VK::MouseMiddle,
        _ => VK::Unknown,
    }
}
